apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: create-llm-connection
spec:
  params:
    - name: name
      type: string
      description: The name of the connection
    - name: description
      type: string
      description: The description of the connection
    - name: modelType
      type: string
      description: The type of model to create, currently only "openai" is supported
      default: "openai"
    - name: url
      type: string
      description: The url of the model
    - name: apiKey
      type: string
      description: The api key of the model (if required)
      default: "abc123"
    - name: modelName
      type: string
      description: The name of the model
  steps:
    - name: curl-request
      image: registry.redhat.io/openshift4/ose-tools-rhel9:latest
      env:
        - name: NAME
          value: "$(params.name)"
        - name: DESCRIPTION
          value: "$(params.description)"
        - name: MODEL_TYPE
          value: "$(params.modelType)"
        - name: URL
          value: "$(params.url)"
        - name: API_KEY
          value: "$(params.apiKey)"
        - name: MODEL_NAME
          value: "$(params.modelName)"
      script: |
        set -e

        curl_command='curl -X POST "{{ .Values.name }}:8080/admin/assistant/llm" \
        -H "Content-Type: application/json" \
        -d '\''{
          "name": "'"$NAME"'",
          "description": "'"$DESCRIPTION"'",
          "modelType": "'"$MODEL_TYPE"'",
          "url": "'"$URL"'",
          "apiKey": "'"$API_KEY"'",
          "modelName": "'"$MODEL_NAME"'"
        }'\'''
        
        echo "$curl_command"

        RESPONSE=$(eval "$curl_command")

        echo "Response: $RESPONSE"

        # Extract the retriever connection ID from the response
        LLM_CONNECTION_ID=$(echo $RESPONSE | jq -r '.id' | tr -d '\n')

        # Write the result to the file
        echo $LLM_CONNECTION_ID > $(results.llmConnectionId.path)
  results:
    - name: llmConnectionId
      description: The ID of the LLM connection
    